/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../..";
import { GigsApi } from "@fern-api/gigs";
import * as core from "../../../core";

export const SubscriptionItem: core.schemas.ObjectSchema<serializers.SubscriptionItem.Raw, GigsApi.SubscriptionItem> =
  core.schemas.object({
    object: core.schemas.string(),
    id: core.schemas.lazy(async () => (await import("../..")).SubscriptionId),
    currentPeriod: core.schemas.lazyObject(async () => (await import("../..")).CurrentPeriod).optional(),
    phoneNumber: core.schemas.string(),
    plan: core.schemas.string(),
    porting: core.schemas.string().optional(),
    sim: core.schemas.string(),
    status: core.schemas.lazy(async () => (await import("../..")).SubscriptionStatus),
    user: core.schemas.string(),
    activatedAt: core.schemas.date(),
    canceledAt: core.schemas.date(),
    createdAt: core.schemas.date(),
    endedAt: core.schemas.date(),
    firstUsageAt: core.schemas.date(),
  });

export declare namespace SubscriptionItem {
  interface Raw {
    object: string;
    id: serializers.SubscriptionId.Raw;
    currentPeriod?: serializers.CurrentPeriod.Raw | null;
    phoneNumber: string;
    plan: string;
    porting?: string | null;
    sim: string;
    status: serializers.SubscriptionStatus.Raw;
    user: string;
    activatedAt: string;
    canceledAt: string;
    createdAt: string;
    endedAt: string;
    firstUsageAt: string;
  }
}
