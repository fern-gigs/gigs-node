/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../..";
import { GigsGigsCoreApi } from "@fern-api/gigs";
import * as core from "../../../core";

export const Device: core.schemas.ObjectSchema<serializers.Device.Raw, GigsGigsCoreApi.Device> = core.schemas.object({
  object: core.schemas.lazy(async () => (await import("../..")).DeviceModelObject),
  id: core.schemas.lazy(async () => (await import("../..")).DeviceId),
  brand: core.schemas.string(),
  name: core.schemas.string(),
  simTypes: core.schemas.list(core.schemas.lazy(async () => (await import("../..")).SimTypes)),
  type: core.schemas.lazy(async () => (await import("../..")).DeviceModelType),
});

export declare namespace Device {
  interface Raw {
    object: serializers.DeviceModelObject.Raw;
    id: serializers.DeviceId.Raw;
    brand: string;
    name: string;
    simTypes: serializers.SimTypes.Raw[];
    type: serializers.DeviceModelType.Raw;
  }
}
