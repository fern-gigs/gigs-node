/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../..";
import { GigsGigsCoreApi } from "@fern-api/gigs";
import * as core from "../../../core";

export const InvalidIccidBody: core.schemas.ObjectSchema<
  serializers.InvalidIccidBody.Raw,
  GigsGigsCoreApi.InvalidIccidBody
> = core.schemas.object({
  object: core.schemas.lazy(async () => (await import("../..")).InvalidIccidBodyObject),
  code: core.schemas.string().optional(),
  details: core.schemas
    .list(core.schemas.lazyObject(async () => (await import("../..")).PropertyErrorDetail))
    .optional(),
  documentation: core.schemas.list(core.schemas.string()).optional(),
  hint: core.schemas.string().optional(),
  message: core.schemas.string(),
  type: core.schemas.string(),
});

export declare namespace InvalidIccidBody {
  interface Raw {
    object: serializers.InvalidIccidBodyObject.Raw;
    code?: string | null;
    details?: serializers.PropertyErrorDetail.Raw[] | null;
    documentation?: string[] | null;
    hint?: string | null;
    message: string;
    type: string;
  }
}
